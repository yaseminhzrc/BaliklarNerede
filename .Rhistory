knitr::opts_chunk$set(class.source="watch-out",class.output="watch-out1")
knitr::include_graphics('C:/Users/yasem/OneDrive/Masaüstü/paketler.jpg')
knitr::include_graphics('C:/Users/yasem/OneDrive/Masaüstü/paketler.png')
knitr::include_graphics('C:/Users/yasem/OneDrive/Masaüstü/analiz.jpg')
knitr::include_graphics('C:/Users/yasem/OneDrive/Masaüstü/gemi.png')
knitr::include_graphics('C:/Users/yasem/OneDrive/Masaüstü/paketler.png')
knitr::include_graphics('C:/Users/yasem/OneDrive/Masaüstü/batimetri.png')
knitr::include_graphics('C:/Users/yasem/OneDrive/Masaüstü/batimetri.jpg')
knitr::include_graphics('C:/Users/yasem/OneDrive/Masaüstü/balıklar.jpg')
knitr::include_graphics('C:/Users/yasem/OneDrive/Masaüstü/balık.jpg')
knitr::include_graphics('C:/Users/yasem/OneDrive/Masaüstü/derinlik.jpg')
knitr::include_graphics('C:/Users/yasem/OneDrive/Masaüstü/gemi1.png')
knitr::include_graphics('C:/Users/yasem/OneDrive/Masaüstü/gemi1.png')
knitr::include_graphics('C:/Users/yasem/OneDrive/Masaüstü/gemi1.png')
# Derinlik verilerini okutalım
bottom<-read_csv("C:/Users/yasem/OneDrive/Masaüstü/BaliklarNerede/bottom_line.csv",
col_types = cols(Ping_date=col_datetime(format="%m/%d/%Y")))%>%
#Ping_date degişkeni ay,gün,yıl olarak tarih formatına dönüştürüldü.
rename_all(tolower)
knitr::opts_chunk$set(class.source="watch-out",class.output="watch-out1")
knitr::include_graphics('C:/Users/yasem/OneDrive/Masaüstü/analiz.jpg')
knitr::include_graphics('C:/Users/yasem/OneDrive/Masaüstü/paketler.png')
# Paketleri Yükleyelim
library(tidyverse)
library(dplyr)
library(readr)
library(lubridate) #tarih düzenlemeleri için
library(ggplot2) #grafikler için
library(patchwork) #aynı anda birden fazla grafiği yan yana çizdirmek için
# Derinlik verilerini okutalım
bottom<-read_csv("C:/Users/yasem/OneDrive/Masaüstü/BaliklarNerede/bottom_line.csv",
col_types = cols(Ping_date=col_datetime(format="%m/%d/%Y")))%>%
#Ping_date degişkeni ay,gün,yıl olarak tarih formatına dönüştürüldü.
rename_all(tolower)
#rename_all tüm değişken isimlerine bir işlem uygulamak için kullanılır.
#Tüm değişken isimleri küçük harfe dönüştürüldü.
glimpse(bottom) #verinin yapısını inceleyeceğiz.
# Derinlik verilerini temizleyelim
bottom_clean<-bottom %>%
filter(position_status==1)%>%
#position_status 1 e eşit olan satırlar filtrelendi.
select(ping_date,ping_time,latitude,longitude,depth)%>%
#talimatlarda belirtilen değişkenler seçildi.
mutate(date_time=ping_date + ping_time,
#tarih ve saat değişkenleri birleştirilerek date_time değişkeni oluşturuldu.
distance_between=c(0,
geosphere::distHaversine(cbind(longitude[-n()],latitude[-n()]),
#longitude=boylam, latitude=enlem
cbind(longitude[ -1],latitude[ -1]))),
#distHaversine komutu ile enlem ve boylam arasındaki mesafe bulundu
#bu şekilde distance_between oluşturuldu.
distance_along=cumsum(distance_between))
#distance_between değişkeninin kümülatif toplamları ile distance_along oluşturuldu.
# Veriyi inceleyelim
glimpse(bottom_clean) #değişkenlerin yapısına bakalım
knitr::opts_chunk$set(class.source="watch-out",class.output="watch-out1")
knitr::include_graphics('C:/Users/yasem/OneDrive/Masaüstü/analiz.jpg')
knitr::include_graphics('C:/Users/yasem/OneDrive/Masaüstü/paketler.png')
# Paketleri Yükleyelim
library(tidyverse)
library(dplyr)
library(readr)
library(lubridate) #tarih düzenlemeleri için
library(ggplot2) #grafikler için
library(patchwork) #aynı anda birden fazla grafiği yan yana çizdirmek için
library(geosphere) #coğrafi hesaplamalar için kullanılıyor.Enlem ve boylam arasındaki mesafenin hesaplanması için kullanılacak.
# Derinlik verilerini okutalım
bottom<-read_csv("C:/Users/yasem/OneDrive/Masaüstü/BaliklarNerede/bottom_line.csv",
col_types = cols(Ping_date=col_datetime(format="%m/%d/%Y")))%>%
#veri setinde Ping_date degişkeni ay,gün,yıl formatındaydı.Bu değişken tarih formatına dönüştürüldü.
rename_all(tolower)
#rename_all tüm değişken isimlerine bir işlem uygulamak için kullanılır.
#Tüm değişken isimleri küçük harfe dönüştürüldü.
glimpse(bottom) #verinin yapısını inceleyeceğiz.
knitr::include_graphics('C:/Users/yasem/OneDrive/Masaüstü/gemi1.png')
# Derinlik verilerini temizleyelim
bottom_clean<-bottom %>%
filter(position_status==1)%>%
#position_status 1 e eşit olan satırlar filtrelendi.
select(ping_date,ping_time,latitude,longitude,depth)%>%
#talimatlarda belirtilen değişkenler seçildi.
mutate(date_time=ping_date + ping_time,
#tarih ve saat değişkenleri birleştirilerek date_time değişkeni oluşturuldu.
distance_between=c(0,
geosphere::distHaversine(cbind(longitude[-n()],latitude[-n()]),
#longitude=boylam, latitude=enlem
cbind(longitude[ -1],latitude[ -1]))),
#distHaversine komutu ile enlem ve boylam arasındaki mesafe bulundu
#bu şekilde distance_between oluşturuldu.
distance_along=cumsum(distance_between))
#distance_between değişkeninin kümülatif toplamları ile distance_along oluşturuldu.
# Veriyi inceleyelim
glimpse(bottom_clean) #değişkenlerin yapısına bakalım
png(file="C:/Users/yasem/OneDrive/Masaüstü/grafik1.png",
width=600, height=350)
# Grafiklerin boyutunu ayarlayalım
options(repr.plot.width=7, repr.plot.height=5)
#Grafiklerin genişlik ve yüksekliği ayarlandı.
# Geminin rotasını çizelim
p_ship_track <-ggplot(bottom_clean, aes(longitude,latitude))+
#x ekseninde boylam, y ekseninde enlem olacak şekilde grafik oluşturuluyor.
geom_point(size=0.5)+
#nokta grafiği çizdirilecektir ve nokta büyüklüğü ayarlanıyor.
labs(x="Longitude",y="Latitude")
#x ve y eksenlerine değişkenlerin isimleri verildi.
# Geminin yolu boyunca deniz tabanının derinliğini çizin.
p_bathymetry<-ggplot(bottom_clean,aes(distance_along,depth))+
#distance_along=geminin yolu,depth=derinlik
geom_point(size=0.5)+
scale_y_reverse()+  #y ekseni ters çevriliyor
labs(x="Distance along trackline (m)",y="Depth (m)")
#x ve y eksenleri isimlendirildi.
# Grafikleri yan yana çizdirelim.
p_ship_track+p_bathymetry
dev.off()
knitr::opts_chunk$set(class.source="watch-out",class.output="watch-out1")
knitr::include_graphics('C:/Users/yasem/OneDrive/Masaüstü/analiz.jpg')
knitr::include_graphics('C:/Users/yasem/OneDrive/Masaüstü/paketler.png')
# Paketleri Yükleyelim
library(tidyverse)
library(dplyr)
library(readr)
library(lubridate) #tarih düzenlemeleri için
library(ggplot2) #grafikler için
library(patchwork) #aynı anda birden fazla grafiği yan yana çizdirmek için
library(geosphere) #coğrafi hesaplamalar için kullanılıyor.Enlem ve boylam arasındaki mesafenin hesaplanması için kullanılacak.
# Derinlik verilerini okutalım
bottom<-read_csv("C:/Users/yasem/OneDrive/Masaüstü/BaliklarNerede/bottom_line.csv",
col_types = cols(Ping_date=col_datetime(format="%m/%d/%Y")))%>%
#veri setinde Ping_date degişkeni ay,gün,yıl formatındaydı.Bu değişken tarih formatına dönüştürüldü.
rename_all(tolower)
#rename_all tüm değişken isimlerine bir işlem uygulamak için kullanılır.
#Tüm değişken isimleri küçük harfe dönüştürüldü.
glimpse(bottom) #verinin yapısını inceleyeceğiz.
knitr::include_graphics('C:/Users/yasem/OneDrive/Masaüstü/gemi1.png')
# Derinlik verilerini temizleyelim
bottom_clean<-bottom %>%
filter(position_status==1)%>%
#position_status 1 e eşit olan satırlar filtrelendi.
select(ping_date,ping_time,latitude,longitude,depth)%>%
#talimatlarda belirtilen değişkenler seçildi.
mutate(date_time=ping_date + ping_time,
#tarih ve saat değişkenleri birleştirilerek date_time değişkeni oluşturuldu.
distance_between=c(0,
geosphere::distHaversine(cbind(longitude[-n()],latitude[-n()]),
#longitude=boylam, latitude=enlem
cbind(longitude[ -1],latitude[ -1]))),
#distHaversine komutu ile enlem ve boylam arasındaki mesafe bulundu
#bu şekilde distance_between oluşturuldu.
distance_along=cumsum(distance_between))
#distance_between değişkeninin kümülatif toplamları ile distance_along oluşturuldu.
# Veriyi inceleyelim
glimpse(bottom_clean) #değişkenlerin yapısına bakalım
png(file="C:/Users/yasem/OneDrive/Masaüstü/grafik1.png",
width=600, height=350)
# Grafiklerin boyutunu ayarlayalım
options(repr.plot.width=7, repr.plot.height=5)
#Grafiklerin genişlik ve yüksekliği ayarlandı.
# Geminin rotasını çizelim
p_ship_track <-ggplot(bottom_clean, aes(longitude,latitude))+
#x ekseninde boylam, y ekseninde enlem olacak şekilde grafik oluşturuluyor.
geom_point(size=0.5)+
#nokta grafiği çizdirilecektir ve nokta büyüklüğü ayarlanıyor.
labs(x="Longitude",y="Latitude")
#x ve y eksenlerine değişkenlerin isimleri verildi.
# Geminin yolu boyunca deniz tabanının derinliğini çizin.
p_bathymetry<-ggplot(bottom_clean,aes(distance_along,depth))+
#distance_along=geminin yolu,depth=derinlik
geom_point(size=0.5)+
scale_y_reverse()+  #y ekseni ters çevriliyor
labs(x="Distance along trackline (m)",y="Depth (m)")
#x ve y eksenleri isimlendirildi.
# Grafikleri yan yana çizdirelim.
p_ship_track+p_bathymetry
dev.off()
knitr::include_graphics('C:/Users/yasem/OneDrive/Masaüstü/balıklar.jpg')
# Akustik veriyi okutalım
acoustic<-read_csv("C:/Users/yasem/OneDrive/Masaüstü/BaliklarNerede/acoustic.csv",
col_types=cols(Date_M=col_datetime(format="%Y%m%d")))%>%
#Date_M değişkeninin  Yıl,ay,gün formatında olduğu belirtildi ve  tarih formatına dönüştürüldü.
filter(Lon_M !=999.0)
#Lon_M 999.0 a eşit olamayanlar filtrelendi.
# Verinin yapısını inceleyelim
glimpse(acoustic)
# Tutulacak değişkenlerin bir listesini oluşturun
variables_keep <- c("Interval", "Layer", "Sv_mean", "Frequency",
"Date_M", "Time_S", "Time_E", "Lat_M", "Lon_M")
#Kullanılacak değişkenler variables_keep olarak alındı.
# Verileri seçin ve filtreleyin
Sv_layer1 <- acoustic %>%
select(one_of(variables_keep)) %>%
#Variables_keep deki değişkenler seçildi
rename(Spatial_interval = Interval, Date = Date_M) %>%
#isim değişiklikleri yapıldı.
filter(Layer == "1")  %>%
#Layer 1 e eşit olan satırlar filtrelendi.
mutate(Datetime_start = Date + Time_S,
#Tarih ve başlangıç saati birleştirilerek Datetime_start oluşturuldu.
Datetime_end = Date + Time_E)  %>%
#Tarih ve bitiş saati birleştirilerek Datetime_end oluşturuldu.
arrange(Datetime_start)
#Datetime_start artan sırada ayarlandı.
# Temizlenmiş akustik verilere bir göz atalım.
glimpse(Sv_layer1)
knitr::include_graphics('C:/Users/yasem/OneDrive/Masaüstü/derinlik.jpg')
# Geçici aralık birleştirme için veri hazırlığı
Sv <- Sv_layer1 %>%
mutate(Distance_between = c(0,
geosphere::distHaversine(cbind(Lon_M[-n()], Lat_M[-n()]),
cbind(Lon_M[  -1], Lat_M[  -1]))),
#aradaki mesafe bulundu.
Distance_along = cumsum(Distance_between)) %>%
#Distance_between için kümülatif toplamlar bulundu ve Distance_along oluşturuldu.
na_if(-999) %>%  #-999'un NA oldugu belirtildi.
mutate(Time_interval = interval(Datetime_start, Datetime_end))
#interval() başlangıç ve bitiş tarihlerini yan yana getirerek birleştirdi
#Time_interval oluşturuldu.
# Veriyi inceleyelim
glimpse(Sv)
# İşlevi adlandırın.
get_Interval_by_time <- function(bottom_data){
res <- Sv$Spatial_interval[bottom_data%within%Sv$Time_interval]
#veriye Sv verisindeki Time_interval aralıklarına göre,
#Sv deki Spatial_interval değerlerini atayacak bir fonksiyon oluşturuldu.
if(length(res)==0) return(NA)         # NA lar
return(res)
}
# Rota çizgisi aralığı değerini bottom_clean verilerine eşleyin.
bottom_spatial_interval_segments <- bottom_clean  %>%
mutate(trackline_interval = purrr::map_dbl(date_time, get_Interval_by_time))
#map_dbl çift vektörleri döndürür.
# date_time değişkenine fonksiyon uygulandı ve trackline_interval oluşturuldu.
# İlk 15 satırı inceleyin.
knitr::kable(head(bottom_spatial_interval_segments, 15))
# Bottom_clean'i gruplayın ve ortalama derinliği hesaplayın
bottom_intervals<-bottom_spatial_interval_segments %>%
group_by(trackline_interval) %>%
#veriyi trackline_interval ile grupluyoruz.
summarize(depth_mean=mean(depth)) %>%
#derinliğin ortalamasını bulup depth_mean a eşitliyoruz.
ungroup()
#Bottom_intervals verilerini akustik veriyle birleştirin
Sv_and_depth<-Sv %>%
left_join(bottom_intervals,by=c("Spatial_interval"="trackline_interval")) %>%
#bottom_intervals verisindeki tracline_interval değişkeninin ismi,
#Sv verisi ile ortak olması için "Spatial_inyterval ismi ile değiştirildi.
#iki veri birleştirildi.
mutate(depth_plot=ifelse(depth_mean >=250,250,depth_mean))
#250 den büyük her ortalama derinlik değeri 250 oldu.
#bu şekilde depth_plot değişkeni oluşturuldu.
# Veriyi inceleyelim
glimpse(Sv_and_depth)
knitr::include_graphics('C:/Users/yasem/OneDrive/Masaüstü/batimetri.jpg')
png(file="C:/Users/yasem/OneDrive/Masaüstü/grafik2.png",
width=600, height=350)
# Üst panel
Sv_mean_plot<-ggplot(Sv_and_depth, aes(Distance_along,Sv_mean))+
geom_line()+
labs(y=expression(mean~volume~backscatter~s[v]~(dB)))+
theme(axis.title.x=element_blank())
# Alt panel
bathymetry<-ggplot(Sv_and_depth,aes(Distance_along,depth_plot))+
geom_line(size=0.5)+
scale_y_reverse()+   #y ekseni ters çevrildi.
labs(x="Distance along trackline (m)",y="Depth(m)")
#x ve y ekseni isimlendirildi.
# İki paneli tek bir şekilde görüntüleyin
Sv_mean_plot/bathymetry
dev.off()
install.packages("rmdformats")
library(knitr)
library(rmdformats)
knitr::opts_chunk$set(class.source="watch-out",class.output="watch-out1")
library(knitr)
library(rmdformats)
knitr::include_graphics('C:/Users/yasem/OneDrive/Masaüstü/foto.jpeg')
knitr::include_graphics('C:/Users/yasem/OneDrive/Masaüstü/foto.jpeg')
